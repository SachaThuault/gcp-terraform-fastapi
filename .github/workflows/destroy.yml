name: 'Destroy Infrastructure'

on:
  workflow_dispatch:
    inputs:
      project_name:
        description: 'Name of the project'
        required: true
        default: 'doctolib-case-dataops'

env:
  PROJECT_NAME: ${{ github.event.inputs.project_name }}

jobs:
  terraform_plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: terraform

    steps:
    # Step 1: Checkout the repository
    - name: Checkout
      uses: actions/checkout@v4

    # Step 2: Set up Google Cloud credentials based on project name
    - name: Set up Google Cloud credentials
      id: setup_credentials
      run: |
          CREDENTIALS_GCP_NAME="${{ github.event.inputs.project_name }}"
          echo "CREDENTIALS_GCP=${{ secrets[CREDENTIALS_GCP_NAME] }}" > credentials.env
          echo "$CREDENTIALS_GCP" > credentials.json

    # Step 3: Export GOOGLE_APPLICATION_CREDENTIALS environment variable
    - name: Export Google Application Credentials
      run: echo "GOOGLE_APPLICATION_CREDENTIALS=credentials.json" >> $GITHUB_ENV

    # Step 4: Install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Step 5: Initialize the Terraform configuration
    - name: Terraform Init
      run: terraform init 

    # Step 6: Check conformity of Terraform configuration files
    - name: Terraform Validate
      run: terraform validate 

    # Step 7: Run Terraform Plan to check for infrastructure changes
    - name: Terraform Plan
      id: plan
      run: terraform plan 

  terraform_destroy:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest
    needs: terraform_plan  # Ensure this job runs after the plan job
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: terraform

    steps:
    # Step 1: Checkout the repository
    - name: Checkout
      uses: actions/checkout@v4

    # Step 2: Set up Google Cloud credentials based on project name
    - name: Set up Google Cloud credentials
      id: setup_credentials
      run: |
          CREDENTIALS_GCP_NAME="${{ github.event.inputs.project_name//-/_ }}"
          echo "CREDENTIALS_GCP=${{ secrets[CREDENTIALS_GCP_NAME] }}" > credentials.env
          echo "$CREDENTIALS_GCP" > credentials.json

    # Step 3: Export GOOGLE_APPLICATION_CREDENTIALS environment variable
    - name: Export Google Application Credentials
      run: echo "GOOGLE_APPLICATION_CREDENTIALS=credentials.json" >> $GITHUB_ENV

    # Step 4: Install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Step 6: Initialize the Terraform configuration
    - name: Terraform Init
      run: terraform init

    # Step 7: Run Terraform Destroy to destroy the configuration
    - name: Terraform Destroy
      run: terraform destroy --auto-approve